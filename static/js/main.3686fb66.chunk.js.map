{"version":3,"sources":["Components/Login/Login.module.css","Components/Posts/Post/Post.module.css","App.module.css","Components/Main/Main.module.css","Components/Profile/Profile.module.css","Components/Posts/Posts.module.css","Components/Footer/Footer.module.css","Components/Main/Main.jsx","Components/Profile/Profile.jsx","Components/Posts/Post/PostElement.jsx","DAL/storage.js","DAL/api_posts-request.js","BLL/postsReducer.js","Components/Posts/Posts.jsx","DAL/api_auth-request.js","BLL/authenticationReducer.js","Components/Login/Login.jsx","Components/Header/Header.jsx","Components/Footer/Footer.jsx","App.js","serviceWorker.js","BLL/redux.js","index.js","Components/Header/Header.module.css"],"names":["module","exports","Main","props","className","styles","wrapper","connect","state","isAuthentication","authentication","to","PostElement","title","content","storage","data","Promise","resolve","localStorage","setItem","getItem","axiosInstance","axios","create","baseURL","interceptors","request","use","headers","token","apiPosts","currentPage","get","then","response","NEXT_PAGE","LOADING","initialState","posts","postsPage","isLoading","postsReducer","action","type","loading","nextPage","Posts","onScroll","e","div","currentTarget","offsetHeight","Math","ceil","scrollTop","scrollHeight","getPosts","this","map","p","key","id","random","body","style","position","height","overflowY","width","Component","page","dispatch","getState","mountPosts","apiAuthentication","login","password","result","username","authenticationError","authenticationReducer","setAuthentication","setUserName","authenticationFalse","Login","onLoginChanged","falseAuthentication","setState","value","onPasswordChanged","onSubmit","forms","form","placeholder","onChange","button","onClick","React","logout","console","log","header","linkWrapper","block","Footer","footer","App","checkAuthorization","app","path","component","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,KAAO,oBAAoB,OAAS,wB,mBCApHD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,MAAQ,oBAAoB,QAAU,wB,mBCAxFD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,uB,mBCAnDD,EAAOC,QAAU,CAAC,QAAU,wB,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,yB,mBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,8NCeZC,EAbF,SAACC,GACV,OACI,6BAASC,UAAWC,IAAOC,SACvB,sFAGA,mN,wBCeGC,eAJS,SAACC,GAAD,MAAY,CAChCC,iBAAkBD,EAAME,eAAeD,oBAGH,KAAzBF,EAnBC,SAACJ,GACb,OAAIA,EAAMM,iBAEF,6BAASL,UAAWC,IAAOC,SACvB,yEACA,kNAMD,kBAAC,IAAD,CAAUK,GAAI,c,kCCAdC,EAbK,SAACT,GACjB,OACI,yBAAKC,UAAWC,IAAOC,SACnB,yBAAKF,UAAWC,IAAOQ,OACnB,4BAAKV,EAAMU,QAEf,yBAAKT,UAAWC,IAAOS,SACnB,2BAAIX,EAAMW,Y,wBCVbC,EAAU,SACTC,GACN,OAAOC,QAAQC,QACXC,aAAaC,QAAQ,QAASJ,KAH7BD,EAAU,WAOf,OAAOE,QAAQC,QACXC,aAAaE,QAAQ,WCL3BC,E,OAAgBC,EAAMC,OACxB,CACIC,QAAS,0CAIjBH,EAAcI,aAAaC,QAAQC,KAAI,SAAAD,GAGnC,OAFAA,EAAQE,QAAQC,MAAQf,IAEjBY,KAGJ,IAAMI,EAAW,WACU,IAArBC,EAAoB,uDAAN,KACnB,OAAOV,EAAcW,IAAd,sBAAiCD,IACnCE,MAAK,SAAAC,GAAQ,OAAIA,EAASnB,S,yjBChBhC,IACMoB,EAAY,qBACZC,EAAU,mBAGjBC,EAAe,CACjBC,MAAO,GAePC,UAAW,EACXC,WAAW,GAyBAC,EAtBM,WAAmC,IAAlClC,EAAiC,uDAAzB8B,EAAcK,EAAW,uCACnD,OAAQA,EAAOC,MACX,IA3BmB,uBA4Bf,OAAO,EAAP,GACOpC,EADP,CAEI+B,MAAM,GAAD,mBAAM/B,EAAM+B,OAAZ,YAAsBI,EAAOJ,UAE1C,KAAKH,EACD,OAAO,EAAP,GACO5B,EADP,CAEIgC,UAAYhC,EAAMgC,UAAY,IAEtC,KAAKH,EACD,OAAO,EAAP,GACO7B,EADP,CAEIiC,UAAWE,EAAOE,UAE1B,QACI,OAAOrC,IAUNsC,EAAW,WACpB,MACI,CAACF,KAAMR,IAITS,EAAU,SAACA,GAAD,MAAc,CAACD,KAAMP,EAASQ,YCvDxCE,E,2MAOFC,SAAW,SAACC,GACR,IAAMC,EAAMD,EAAEE,cACTD,EAAIE,aAAeC,KAAKC,KAAKJ,EAAIK,YAAeL,EAAIM,cACrD,EAAKrD,MAAMsD,SAAS,EAAKtD,MAAMqC,Y,mFAPnCkB,KAAKvD,MAAMsD,SAASC,KAAKvD,MAAMqC,a,6BAY5BrC,GACH,IAAIoC,EAAQmB,KAAKvD,MAAMoC,MAAMoB,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CACpCC,IAAKD,EAAEE,GAAKT,KAAKU,SACjBlD,MAAO+C,EAAE/C,MACTC,QAAS8C,EAAEI,UAEf,OACI,6BAAS5D,UAAWC,IAAOC,SACvB,yBAAK0C,SAAUU,KAAKV,SACfiB,MAAO,CAACC,SAAU,WAAYC,OAAQ,OAAQC,UAAW,SAAUC,MAAO,SAC1E9B,Q,GAzBD+B,aAuCL/D,eANO,SAACC,GAAD,MAAY,CACtB+B,MAAO/B,EAAM+B,MAAMA,MACnBC,UAAWhC,EAAM+B,MAAMC,aAIK,CAACiB,SDkBjB,SAACc,GAAD,OAAU,SAACC,EAAUC,GACpCA,IAAWlC,MAAME,YAClB+B,EAAS3B,GAAQ,IACjBd,EAAkBwC,GACbrC,MAAK,SAACK,GACCiC,EAjBD,SAACjC,GAAD,MACf,CAACK,KAlDsB,uBAkDHL,SAgBKmC,CAAWnC,IACpBiC,EAAS1B,KACT0B,EAAS3B,GAAQ,UCzBcC,YAApCvC,CAA+CwC,G,iBC7CjD4B,EAAoB,SACvBC,EAAOC,GACT,MAAc,UAAVD,GAAkC,WAAbC,EACd5D,QAAQC,QACX,CAACY,MAAO,cAAegD,OAAQ,EAAGC,SAAU,UAGzC9D,QAAQC,QACX,CAAC4D,OAAQ,IAAKhD,MAAO,KAAMiD,SAAU,MARxCJ,EAAoB,WAazB,OAAO1D,QAAQC,QACX,CAAC4D,OAAQ,EAAGhD,MAAO,Q,yjBCXxB,IAIDQ,EAAe,CACjB7B,kBAAkB,EAClBuE,qBAAqB,EACrBD,SAAU,IAyBCE,EAtBe,WAAmC,IAAlCzE,EAAiC,uDAAzB8B,EAAcK,EAAW,uCAC5D,OAAQA,EAAOC,MACX,IAZ0B,8BAatB,OAAO,KACApC,EADP,CAEIC,iBAAkBkC,EAAOlC,mBAEjC,IAhB4B,gCAiBxB,OAAO,KACAD,EADP,CAEIwE,oBAAqBrC,EAAOqC,sBAEpC,IApBoB,wBAqBhB,OAAO,KACAxE,EADP,CAEIuE,SAAUpC,EAAOoC,WAEzB,QACI,OAAOvE,IAON0E,EAAoB,SAACzE,GAAD,MAC7B,CAACmC,KApC6B,8BAoCHnC,qBAElB0E,EAAc,SAACJ,GAAD,MACvB,CAACnC,KArCuB,wBAqCHmC,aAGZK,GAAsB,SAACJ,GAAD,MAC/B,CAACpC,KA1C+B,gCA0CHoC,wBCxC3BK,G,2MACF7E,MAAQ,CACJoE,MAAO,GACPC,SAAU,I,EAGdS,eAAiB,SAACrC,GAEd,EAAK9C,MAAMoF,qBAAoB,GAC/B,EAAKC,SAAS,CACVZ,MAAO3B,EAAEE,cAAcsC,S,EAI/BC,kBAAoB,SAACzC,GAEjB,EAAK9C,MAAMoF,qBAAoB,GAC/B,EAAKC,SAAS,CACVX,SAAU5B,EAAEE,cAAcsC,S,EAIlCE,SAAW,WACP,EAAKxF,MAAMyE,MAAM,EAAKpE,MAAMoE,MAAO,EAAKpE,MAAMqE,UAC9C,EAAKW,SAAS,CACVZ,MAAO,GACPC,SAAU,M,wEAKd,OAAInB,KAAKvD,MAAMM,iBACJ,kBAAC,IAAD,CAAUE,GAAI,aAEd,yBAAKP,UAAWC,IAAOC,SAC1B,6FACA,yBAAKF,UAAWC,IAAOuF,OACnB,yBAAKxF,UAAWC,IAAOwF,MACnB,kEACA,2BAAOjD,KAAM,QAASkD,YAAa,8FAC5BL,MAAO/B,KAAKlD,MAAMoE,MAClBmB,SAAUrC,KAAK4B,kBAE1B,yBAAKlF,UAAWC,IAAOwF,MACnB,wEACA,2BAAOjD,KAAM,WAAYkD,YAAa,uCAC/BL,MAAO/B,KAAKlD,MAAMqE,SAClBkB,SAAUrC,KAAKgC,qBAEzBhC,KAAKvD,MAAM6E,qBAAuB,6QACnC,4BAAQ5E,UAAWC,IAAO2F,OAAQC,QAASvC,KAAKiC,UAAhD,wC,GAlDAO,IAAM5B,WA8DX/D,gBALS,SAACC,GAAD,MAAY,CAChCC,iBAAkBD,EAAME,eAAeD,iBACvCuE,oBAAqBxE,EAAME,eAAesE,uBAGN,CACpCJ,MDnBiB,SAACG,EAAUF,GAAX,OAAwB,SAACL,GAE1CG,EAAwBI,EAAUF,GAC7B3C,MAAK,SAACC,GACC,OAAwB,IAApBA,EAAS2C,QACT/D,EAAkBoB,EAASL,OAC3B0C,EAASU,GAAkB,IAC3BV,EAASW,EAAYhD,EAAS4C,WACvB5C,IAEPqC,EAASY,IAAoB,IACtBjD,QCQhBoD,oBAAqBH,IADjB7E,CAEZ8E,I,2BCpCY9E,gBALS,SAACC,GAAD,MAAY,CAChCuE,SAAUvE,EAAME,eAAeqE,SAC/BtE,iBAAkBD,EAAME,eAAeD,oBAGH,CAAC0F,OFiCnB,kBAAM,SAAC3B,GACzBG,IACKzC,MAAK,SAAAC,GAC0B,IAApBA,EAAS2C,OACT/D,EAAkBoB,EAASL,OACtBI,MAAK,WAGE,OAFAsC,EAASU,GAAkB,IAC3BV,EAASW,EAAY,KACdhD,KAInBiE,QAAQC,IAAI,sBE7CjB9F,EA5BA,SAACJ,GACZ,OACI,4BAAQC,UAAWC,KAAOiG,QACtB,0BAAMlG,UAAWC,KAAOQ,OAAxB,cACA,wBAAIT,UAAWC,KAAOkG,aAClB,wBAAInG,UAAWC,KAAOmG,OAClB,kBAAC,KAAD,CAAS7F,GAAG,MAAZ,+CAEJ,wBAAIP,UAAWC,KAAOmG,OAClB,kBAAC,KAAD,CAAS7F,GAAG,UAAZ,+CAEJ,wBAAIP,UAAWC,KAAOmG,OAClB,kBAAC,KAAD,CAAS7F,GAAG,YAAZ,gDAGR,0BAAMP,UAAWC,KAAOuE,OACrB,8BAAOzE,EAAM4E,UACX5E,EAAMM,kBAAoB,4BAAQL,UAAWC,KAAO2F,OAAQC,QAAS9F,EAAMgG,QAAjD,U,oBCV5BM,GAVA,SAACtG,GACZ,OACI,4BAAQC,UAAWC,KAAOqG,QACtB,yCCMNC,G,4LAGEjD,KAAKvD,MAAMyG,uB,6BAGRzG,GACH,OACI,yBAAKC,UAAWC,IAAOwG,KACnB,kBAAC,GAAD,MACA,yBAAKzG,UAAWC,IAAOC,SACnB,kBAAC,IAAD,CAAOwG,KAAM,KAAMC,UAAW,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOD,KAAM,SAAUC,UAAW,kBAAM,kBAAC,EAAD,SACxC,kBAAC,IAAD,CAAOD,KAAM,WAAYC,UAAW,kBAAM,kBAAC,EAAD,SAC1C,kBAAC,IAAD,CAAOD,KAAM,SAAUC,UAAW,kBAAM,kBAAC,GAAD,UAE5C,kBAAC,GAAD,W,GAhBEzC,aAsBH/D,eAAQ,KAAM,CAACqG,mBJmDI,kBAAM,SAACpC,GACrCzD,IACKmB,MAAK,SAACJ,GACW,SAAVA,GAEA0C,EAASU,GAAkB,IAE3BV,EAASW,EAAY,YAErBX,EAASU,GAAkB,IAC3BV,EAASW,EAAY,YI7DtB5E,CAAoCoG,ICtB/BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sBCbAC,GAAWC,aAAgB,CAC7B5G,eAAgBuE,EAChB1C,MAAOG,IAII6E,GADDC,aAAYH,GAAUI,aAAgBC,OCDpDC,IAASC,OAAO,kBAAC,KAAD,CAAeC,SAAUC,qBACrC,kBAAC,IAAD,CAAUP,MAAOA,IACb,kBAAC,GAAD,QAEUQ,SAASC,eAAe,SFoHpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjG,MAAK,SAAAkG,GACjCA,EAAaC,iB,kBGlInBrI,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,YAAc,4BAA4B,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.3686fb66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2CuEe\",\"forms\":\"Login_forms__1TuYR\",\"form\":\"Login_form__3O7bN\",\"button\":\"Login_button__166ZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__3wXfg\",\"title\":\"Post_title__T1_V6\",\"content\":\"Post_content__4L5F1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3DjjN\",\"wrapper\":\"App_wrapper__1ApzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__2ImUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__1s84i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Posts_wrapper__3jfxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__zdS_v\"};","import React from 'react';\r\nimport styles from './Main.module.css';\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <section className={styles.wrapper}>\r\n            <h1>\r\n                ЗАГОЛОВОК\r\n            </h1>\r\n            <p>\r\n                Здесь находится главная страница.\r\n            </p>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n    if (props.isAuthentication) {\r\n        return (\r\n            <section className={styles.wrapper}>\r\n                <b>Профиль</b>\r\n                <p>\r\n                    Здесь находится страница профиля.\r\n                </p>\r\n            </section>\r\n        )\r\n    } else {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthentication: state.authentication.isAuthentication\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Profile);\r\n","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nconst PostElement = (props) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.title}>\r\n                <h3>{props.title}</h3>\r\n            </div>\r\n            <div className={styles.content}>\r\n                <p>{props.content}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostElement;\r\n","export const storage = {\r\n    saveToken(data) {\r\n        return Promise.resolve(\r\n            localStorage.setItem('token', data)\r\n        )\r\n    },\r\n    loadToken() {\r\n        return Promise.resolve(\r\n            localStorage.getItem('token')\r\n        )\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport {storage} from \"./storage\";\r\n\r\nconst axiosInstance = axios.create(\r\n    {\r\n        baseURL: 'https://jsonplaceholder.typicode.com/'\r\n    }\r\n);\r\n\r\naxiosInstance.interceptors.request.use(request => {\r\n    request.headers.token = storage.loadToken();\r\n    // всё ли здесь верно, ведь LoadToken возвращает нам\r\n    return request;\r\n});\r\n\r\nexport const apiPosts = {\r\n    getPosts(currentPage = null) {\r\n        return axiosInstance.get(`posts?_page=${currentPage}`,)\r\n            .then(response => response.data)\r\n    }\r\n};\r\n","import {apiPosts} from \"../DAL/api_posts-request\";\r\n\r\nexport const MOUNT_POSTS = 'TEST-APP/MOUNT-POSTS';\r\nexport const NEXT_PAGE = 'TEST-APP/NEXT_PAGE';\r\nexport const LOADING = 'TEST-APP/LOADING';\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        // {\r\n        //     userId: 1,\r\n        //     id: 1,\r\n        //     title: 'Оу, это первый пост',\r\n        //     body: 'Hey, everyone! Hey, everyone! Hey, everyone! Hey, everyone! Hey, everyone! Hey, everyone! ' +\r\n        //         'Hey, everyone! Hey, everyone! Hey, everyone! Hey, everyone! Hey, everyone! Hey, everyone! ' +\r\n        //         'Hey, everyone!'\r\n        // }, {\r\n        //     userId: 2,\r\n        //     id: 2,\r\n        //     title: 'Second title',\r\n        //     body: 'Hey, everyone! Hey, everyone! Hey, everyone! Hey, everyone!'\r\n        // },\r\n    ],\r\n    postsPage: 1,\r\n    isLoading: false\r\n};\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case MOUNT_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, ...action.posts],\r\n            };\r\n        case NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                postsPage: (state.postsPage + 1),\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.loading,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default postsReducer;\r\n\r\nconst mountPosts = (posts) => (\r\n    {type: MOUNT_POSTS, posts}\r\n);\r\n\r\nexport const nextPage = () => {\r\n    return (\r\n        {type: NEXT_PAGE}\r\n    )\r\n};\r\n\r\nconst loading = (loading) => ({type: LOADING, loading});\r\n\r\nexport const getPosts = (page) => (dispatch, getState) => {\r\n    if (!getState().posts.isLoading) {\r\n        dispatch(loading(true));\r\n        apiPosts.getPosts(page)\r\n            .then((posts) => {\r\n                    dispatch(mountPosts(posts));\r\n                    dispatch(nextPage());\r\n                    dispatch(loading(false));\r\n                }\r\n            );\r\n    }\r\n};\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport styles from './Posts.module.css';\r\nimport PostElement from \"./Post/PostElement\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPosts, nextPage} from \"../../BLL/postsReducer\";\r\n\r\nclass Posts extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getPosts(this.props.postsPage);\r\n        // this.props.nextPage();\r\n    }\r\n\r\n    onScroll = (e) => {\r\n        const div = e.currentTarget;\r\n        if ((div.offsetHeight + Math.ceil(div.scrollTop)) >= div.scrollHeight) {\r\n            this.props.getPosts(this.props.postsPage);\r\n            // div.scrollTop = div.scrollHeight;\r\n        }\r\n    };\r\n\r\n    render(props) {\r\n        let posts = this.props.posts.map((p) => <PostElement\r\n            key={p.id + Math.random()}\r\n            title={p.title}\r\n            content={p.body}\r\n        />);\r\n        return (\r\n            <section className={styles.wrapper}>\r\n                <div onScroll={this.onScroll}\r\n                     style={{position: 'absolute', height: '100%', overflowY: 'scroll', width: '100%'}}>\r\n                    {posts}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst\r\n    mapStateToProps = (state) => ({\r\n            posts: state.posts.posts,\r\n            postsPage: state.posts.postsPage\r\n        }\r\n    );\r\n\r\nexport default connect(mapStateToProps, {getPosts, nextPage})(Posts);\r\n","export const apiAuthentication = {\r\n    login(login, password) {\r\n        if (login === 'Admin' && password === '111111') {\r\n            return Promise.resolve(\r\n                {token: 'valid_token', result: 0, username: 'Admin'}\r\n            )\r\n        } else {\r\n            return Promise.resolve(\r\n                {result: 401, token: null, username: ''}\r\n            )\r\n        }\r\n    },\r\n    logout() {\r\n        return Promise.resolve(\r\n            {result: 0, token: null}\r\n        )\r\n    }\r\n};\r\n","import {apiAuthentication} from \"../DAL/api_auth-request\";\r\nimport {storage} from \"../DAL/storage\";\r\n\r\nexport const SET_AUTHENTICATION = 'TEST-APP/SET_AUTHENTICATION';\r\nexport const AUTHENTICATION_ERROR = 'TEST-APP/AUTHENTICATION_ERROR';\r\nexport const SET_USERNAME = 'TEST-APP/SET_USERNAME';\r\n\r\nconst initialState = {\r\n    isAuthentication: false,\r\n    authenticationError: false,\r\n    username: '',\r\n};\r\n\r\nconst authenticationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHENTICATION:\r\n            return {\r\n                ...state,\r\n                isAuthentication: action.isAuthentication,\r\n            };\r\n        case AUTHENTICATION_ERROR:\r\n            return {\r\n                ...state,\r\n                authenticationError: action.authenticationError,\r\n            };\r\n        case SET_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.username,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authenticationReducer;\r\n\r\n// ACTION CREATORS:\r\nexport const setAuthentication = (isAuthentication) => (\r\n    {type: SET_AUTHENTICATION, isAuthentication}\r\n);\r\nexport const setUserName = (username) => (\r\n    {type: SET_USERNAME, username}\r\n);\r\n\r\nexport const authenticationFalse = (authenticationError) => (\r\n    {type: AUTHENTICATION_ERROR, authenticationError}\r\n);\r\n\r\n// THUNK CREATORS:\r\nexport const login = (username, password) => (dispatch) => {\r\n    // const loginResponse =\r\n    apiAuthentication.login(username, password)\r\n        .then((response) => {\r\n                if (response.result === 0) {\r\n                    storage.saveToken(response.token);\r\n                    dispatch(setAuthentication(true));\r\n                    dispatch(setUserName(response.username));\r\n                    return response;\r\n                } else {\r\n                    dispatch(authenticationFalse(true));\r\n                    return response\r\n                }\r\n            }\r\n        )\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    apiAuthentication.logout()\r\n        .then(response => {\r\n                if (response.result === 0) {\r\n                    storage.saveToken(response.token)\r\n                        .then(() => {\r\n                                dispatch(setAuthentication(false));\r\n                                dispatch(setUserName(''));\r\n                                return response\r\n                            }\r\n                        )\r\n                } else {\r\n                    console.log('Logout Error')\r\n                }\r\n            }\r\n        );\r\n};\r\n\r\nexport const checkAuthorization = () => (dispatch) => {\r\n    storage.loadToken()\r\n        .then((token) => {\r\n            if (token !== 'null') {\r\n                // js преобразует null в строку 'null' , как этого избежать?\r\n                dispatch(setAuthentication(true));\r\n                // как определить имя пользователя по токену?\r\n                dispatch(setUserName('Admin'));\r\n            } else {\r\n                dispatch(setAuthentication(false));\r\n                dispatch(setUserName(''));\r\n            }\r\n        })\r\n};\r\n\r\n","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {authenticationFalse, login} from \"../../BLL/authenticationReducer\";\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        login: '',\r\n        password: '',\r\n    };\r\n\r\n    onLoginChanged = (e) => {\r\n        // зачищаю ошибку, может есть лучшее решение\r\n        this.props.falseAuthentication(false);\r\n        this.setState({\r\n            login: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    onPasswordChanged = (e) => {\r\n        // зачищаю ошибку, может есть лучшее решение\r\n        this.props.falseAuthentication(false);\r\n        this.setState({\r\n            password: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        this.props.login(this.state.login, this.state.password);\r\n        this.setState({\r\n            login: '',\r\n            password: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.isAuthentication) {\r\n            return <Redirect to={\"/profile\"}/>\r\n        } else {\r\n            return <div className={styles.wrapper}>\r\n                <h2>Форма входа</h2>\r\n                <div className={styles.forms}>\r\n                    <div className={styles.form}>\r\n                        <span>Логин: </span>\r\n                        <input type={\"login\"} placeholder={'Имя пользователя'}\r\n                               value={this.state.login}\r\n                               onChange={this.onLoginChanged}/>\r\n                    </div>\r\n                    <div className={styles.form}>\r\n                        <span>Пароль: </span>\r\n                        <input type={\"password\"} placeholder={'Пароль'}\r\n                               value={this.state.password}\r\n                               onChange={this.onPasswordChanged}/>\r\n                    </div>\r\n                    {this.props.authenticationError && <mark>Имя пользователя или пароль введены не верно.</mark>}\r\n                    <button className={styles.button} onClick={this.onSubmit}>Войти</button>\r\n                </div>\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthentication: state.authentication.isAuthentication,\r\n    authenticationError: state.authentication.authenticationError,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    login, falseAuthentication: authenticationFalse\r\n})(Login);\r\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../BLL/authenticationReducer\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <span className={styles.title}> Test APP </span>\r\n            <ul className={styles.linkWrapper}>\r\n                <li className={styles.block}>\r\n                    <NavLink to='/ '>Главная</NavLink>\r\n                </li>\r\n                <li className={styles.block}>\r\n                    <NavLink to=\"/posts\">Новости</NavLink>\r\n                </li>\r\n                <li className={styles.block}>\r\n                    <NavLink to=\"/profile\">Профиль</NavLink>\r\n                </li>\r\n            </ul>\r\n            <span className={styles.login}>\r\n               <span>{props.username}</span>\r\n                {props.isAuthentication && <button className={styles.button} onClick={props.logout}>X</button>}\r\n            </span>\r\n        </header>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username: state.authentication.username,\r\n    isAuthentication: state.authentication.isAuthentication\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);\r\n","import React from 'react';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <header className={styles.footer}>\r\n            <footer>\r\n                (c)\r\n            </footer>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\nimport styles from './App.module.css';\nimport {Redirect, Route} from \"react-router-dom\";\nimport Main from \"./Components/Main/Main\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Posts from \"./Components/Posts/Posts\";\nimport Login from \"./Components/Login/Login\";\nimport Header from \"./Components/Header/Header\";\nimport Footer from \"./Components/Footer/Footer\";\nimport {connect} from \"react-redux\";\nimport {checkAuthorization} from \"./BLL/authenticationReducer\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.checkAuthorization()\n    };\n\n    render(props) {\n        return (\n            <div className={styles.app}>\n                <Header/>\n                <div className={styles.wrapper}>\n                    <Route path={'/ '} component={() => <Main/>}/>\n                    <Route path={'/posts'} component={() => <Posts/>}/>\n                    <Route path={'/profile'} component={() => <Profile/>}/>\n                    <Route path={'/login'} component={() => <Login/>}/>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {checkAuthorization})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport authenticationReducer from \"./authenticationReducer\";\r\nimport postsReducer from \"./postsReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n    authentication: authenticationReducer,\r\n    posts: postsReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./BLL/redux\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n        <App/>\n    </Provider>\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3y_YB\",\"title\":\"Header_title__2RHMX\",\"linkWrapper\":\"Header_linkWrapper__17FaT\",\"block\":\"Header_block__2G6o8\",\"login\":\"Header_login__1P7N6\"};"],"sourceRoot":""}